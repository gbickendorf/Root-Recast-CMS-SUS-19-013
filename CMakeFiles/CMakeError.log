Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Determining if the C compiler works failed with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_d4368/fast && /usr/bin/make -f CMakeFiles/cmTC_d4368.dir/build.make CMakeFiles/cmTC_d4368.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d4368.dir/testCCompiler.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_d4368.dir/testCCompiler.c.o   -c /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp/testCCompiler.c
/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp/testCCompiler.c:2:3: error: #error "The CMAKE_C_COMPILER is set to a C++ compiler"
    2 | # error "The CMAKE_C_COMPILER is set to a C++ compiler"
      |   ^~~~~
make[1]: *** [CMakeFiles/cmTC_d4368.dir/build.make:66: CMakeFiles/cmTC_d4368.dir/testCCompiler.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_d4368/fast] Error 2



Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e3e96/fast && /usr/bin/make -f CMakeFiles/cmTC_e3e96.dir/build.make CMakeFiles/cmTC_e3e96.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e3e96.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_e3e96.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_e3e96.dir/build.make:66: CMakeFiles/cmTC_e3e96.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_e3e96/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f91bb/fast && /usr/bin/make -f CMakeFiles/cmTC_f91bb.dir/build.make CMakeFiles/cmTC_f91bb.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f91bb.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_f91bb.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_f91bb.dir/build.make:66: CMakeFiles/cmTC_f91bb.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_f91bb/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_90315/fast && /usr/bin/make -f CMakeFiles/cmTC_90315.dir/build.make CMakeFiles/cmTC_90315.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_90315.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_90315.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_90315.dir/build.make:66: CMakeFiles/cmTC_90315.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_90315/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Determining if the C compiler works failed with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_098bd/fast && /usr/bin/make -f CMakeFiles/cmTC_098bd.dir/build.make CMakeFiles/cmTC_098bd.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_098bd.dir/testCCompiler.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_098bd.dir/testCCompiler.c.o   -c /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp/testCCompiler.c
/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp/testCCompiler.c:2:3: error: #error "The CMAKE_C_COMPILER is set to a C++ compiler"
    2 | # error "The CMAKE_C_COMPILER is set to a C++ compiler"
      |   ^~~~~
make[1]: *** [CMakeFiles/cmTC_098bd.dir/build.make:66: CMakeFiles/cmTC_098bd.dir/testCCompiler.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_098bd/fast] Error 2



Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_614a0/fast && /usr/bin/make -f CMakeFiles/cmTC_614a0.dir/build.make CMakeFiles/cmTC_614a0.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_614a0.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_614a0.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_614a0.dir/build.make:66: CMakeFiles/cmTC_614a0.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_614a0/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_017fa/fast && /usr/bin/make -f CMakeFiles/cmTC_017fa.dir/build.make CMakeFiles/cmTC_017fa.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_017fa.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_017fa.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_017fa.dir/build.make:66: CMakeFiles/cmTC_017fa.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_017fa/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_76e2c/fast && /usr/bin/make -f CMakeFiles/cmTC_76e2c.dir/build.make CMakeFiles/cmTC_76e2c.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_76e2c.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_76e2c.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_76e2c.dir/build.make:66: CMakeFiles/cmTC_76e2c.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_76e2c/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_48149/fast && /usr/bin/make -f CMakeFiles/cmTC_48149.dir/build.make CMakeFiles/cmTC_48149.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_48149.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_48149.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_48149.dir/build.make:66: CMakeFiles/cmTC_48149.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_48149/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_236ec/fast && /usr/bin/make -f CMakeFiles/cmTC_236ec.dir/build.make CMakeFiles/cmTC_236ec.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_236ec.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_236ec.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_236ec.dir/build.make:66: CMakeFiles/cmTC_236ec.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_236ec/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_312d5/fast && /usr/bin/make -f CMakeFiles/cmTC_312d5.dir/build.make CMakeFiles/cmTC_312d5.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_312d5.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_312d5.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_312d5.dir/build.make:66: CMakeFiles/cmTC_312d5.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_312d5/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b238f/fast && /usr/bin/make -f CMakeFiles/cmTC_b238f.dir/build.make CMakeFiles/cmTC_b238f.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b238f.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_b238f.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_b238f.dir/build.make:66: CMakeFiles/cmTC_b238f.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_b238f/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b322e/fast && /usr/bin/make -f CMakeFiles/cmTC_b322e.dir/build.make CMakeFiles/cmTC_b322e.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b322e.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_b322e.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_b322e.dir/build.make:66: CMakeFiles/cmTC_b322e.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_b322e/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_7495c/fast && /usr/bin/make -f CMakeFiles/cmTC_7495c.dir/build.make CMakeFiles/cmTC_7495c.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_7495c.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_7495c.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_7495c.dir/build.make:66: CMakeFiles/cmTC_7495c.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_7495c/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6daa9/fast && /usr/bin/make -f CMakeFiles/cmTC_6daa9.dir/build.make CMakeFiles/cmTC_6daa9.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6daa9.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_6daa9.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_6daa9.dir/build.make:66: CMakeFiles/cmTC_6daa9.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_6daa9/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_16ea6/fast && /usr/bin/make -f CMakeFiles/cmTC_16ea6.dir/build.make CMakeFiles/cmTC_16ea6.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_16ea6.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_16ea6.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_16ea6.dir/build.make:66: CMakeFiles/cmTC_16ea6.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_16ea6/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6a6b3/fast && /usr/bin/make -f CMakeFiles/cmTC_6a6b3.dir/build.make CMakeFiles/cmTC_6a6b3.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6a6b3.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_6a6b3.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_6a6b3.dir/build.make:66: CMakeFiles/cmTC_6a6b3.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_6a6b3/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c124d/fast && /usr/bin/make -f CMakeFiles/cmTC_c124d.dir/build.make CMakeFiles/cmTC_c124d.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c124d.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_c124d.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_c124d.dir/build.make:66: CMakeFiles/cmTC_c124d.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_c124d/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_cf099/fast && /usr/bin/make -f CMakeFiles/cmTC_cf099.dir/build.make CMakeFiles/cmTC_cf099.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_cf099.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_cf099.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_cf099.dir/build.make:66: CMakeFiles/cmTC_cf099.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_cf099/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_80ba6/fast && /usr/bin/make -f CMakeFiles/cmTC_80ba6.dir/build.make CMakeFiles/cmTC_80ba6.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_80ba6.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_80ba6.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_80ba6.dir/build.make:66: CMakeFiles/cmTC_80ba6.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_80ba6/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a67e8/fast && /usr/bin/make -f CMakeFiles/cmTC_a67e8.dir/build.make CMakeFiles/cmTC_a67e8.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a67e8.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_a67e8.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_a67e8.dir/build.make:66: CMakeFiles/cmTC_a67e8.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_a67e8/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_2be95/fast && /usr/bin/make -f CMakeFiles/cmTC_2be95.dir/build.make CMakeFiles/cmTC_2be95.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_2be95.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_2be95.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_2be95.dir/build.make:66: CMakeFiles/cmTC_2be95.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_2be95/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_9c754/fast && /usr/bin/make -f CMakeFiles/cmTC_9c754.dir/build.make CMakeFiles/cmTC_9c754.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_9c754.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_9c754.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_9c754.dir/build.make:66: CMakeFiles/cmTC_9c754.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_9c754/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e4645/fast && /usr/bin/make -f CMakeFiles/cmTC_e4645.dir/build.make CMakeFiles/cmTC_e4645.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e4645.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_e4645.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_e4645.dir/build.make:66: CMakeFiles/cmTC_e4645.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_e4645/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_87668/fast && /usr/bin/make -f CMakeFiles/cmTC_87668.dir/build.make CMakeFiles/cmTC_87668.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_87668.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_87668.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_87668.dir/build.make:66: CMakeFiles/cmTC_87668.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_87668/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a4386/fast && /usr/bin/make -f CMakeFiles/cmTC_a4386.dir/build.make CMakeFiles/cmTC_a4386.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a4386.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_a4386.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_a4386.dir/build.make:66: CMakeFiles/cmTC_a4386.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_a4386/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_86666/fast && /usr/bin/make -f CMakeFiles/cmTC_86666.dir/build.make CMakeFiles/cmTC_86666.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_86666.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_86666.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_86666.dir/build.make:66: CMakeFiles/cmTC_86666.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_86666/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_90047/fast && /usr/bin/make -f CMakeFiles/cmTC_90047.dir/build.make CMakeFiles/cmTC_90047.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_90047.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_90047.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_90047.dir/build.make:66: CMakeFiles/cmTC_90047.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_90047/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f8463/fast && /usr/bin/make -f CMakeFiles/cmTC_f8463.dir/build.make CMakeFiles/cmTC_f8463.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f8463.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_f8463.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_f8463.dir/build.make:66: CMakeFiles/cmTC_f8463.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_f8463/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_3899e/fast && /usr/bin/make -f CMakeFiles/cmTC_3899e.dir/build.make CMakeFiles/cmTC_3899e.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_3899e.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_3899e.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_3899e.dir/build.make:66: CMakeFiles/cmTC_3899e.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_3899e/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f1ac9/fast && /usr/bin/make -f CMakeFiles/cmTC_f1ac9.dir/build.make CMakeFiles/cmTC_f1ac9.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f1ac9.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_f1ac9.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_f1ac9.dir/build.make:66: CMakeFiles/cmTC_f1ac9.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_f1ac9/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_6890f/fast && /usr/bin/make -f CMakeFiles/cmTC_6890f.dir/build.make CMakeFiles/cmTC_6890f.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_6890f.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_6890f.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_6890f.dir/build.make:66: CMakeFiles/cmTC_6890f.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_6890f/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_0fb37/fast && /usr/bin/make -f CMakeFiles/cmTC_0fb37.dir/build.make CMakeFiles/cmTC_0fb37.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_0fb37.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_0fb37.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_0fb37.dir/build.make:66: CMakeFiles/cmTC_0fb37.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_0fb37/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_12a9a/fast && /usr/bin/make -f CMakeFiles/cmTC_12a9a.dir/build.make CMakeFiles/cmTC_12a9a.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_12a9a.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_12a9a.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_12a9a.dir/build.make:66: CMakeFiles/cmTC_12a9a.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_12a9a/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_61a81/fast && /usr/bin/make -f CMakeFiles/cmTC_61a81.dir/build.make CMakeFiles/cmTC_61a81.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_61a81.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_61a81.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_61a81.dir/build.make:66: CMakeFiles/cmTC_61a81.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_61a81/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_2a4f8/fast && /usr/bin/make -f CMakeFiles/cmTC_2a4f8.dir/build.make CMakeFiles/cmTC_2a4f8.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_2a4f8.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_2a4f8.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_2a4f8.dir/build.make:66: CMakeFiles/cmTC_2a4f8.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_2a4f8/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_2d664/fast && /usr/bin/make -f CMakeFiles/cmTC_2d664.dir/build.make CMakeFiles/cmTC_2d664.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_2d664.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_2d664.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_2d664.dir/build.make:66: CMakeFiles/cmTC_2d664.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_2d664/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_41040/fast && /usr/bin/make -f CMakeFiles/cmTC_41040.dir/build.make CMakeFiles/cmTC_41040.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_41040.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_41040.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_41040.dir/build.make:66: CMakeFiles/cmTC_41040.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_41040/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_66a51/fast && /usr/bin/make -f CMakeFiles/cmTC_66a51.dir/build.make CMakeFiles/cmTC_66a51.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_66a51.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_66a51.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_66a51.dir/build.make:66: CMakeFiles/cmTC_66a51.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_66a51/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_52f95/fast && /usr/bin/make -f CMakeFiles/cmTC_52f95.dir/build.make CMakeFiles/cmTC_52f95.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_52f95.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_52f95.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_52f95.dir/build.make:66: CMakeFiles/cmTC_52f95.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_52f95/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_92da1/fast && /usr/bin/make -f CMakeFiles/cmTC_92da1.dir/build.make CMakeFiles/cmTC_92da1.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_92da1.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_92da1.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_92da1.dir/build.make:66: CMakeFiles/cmTC_92da1.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_92da1/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_82bd7/fast && /usr/bin/make -f CMakeFiles/cmTC_82bd7.dir/build.make CMakeFiles/cmTC_82bd7.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_82bd7.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_82bd7.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_82bd7.dir/build.make:66: CMakeFiles/cmTC_82bd7.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_82bd7/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_e8893/fast && /usr/bin/make -f CMakeFiles/cmTC_e8893.dir/build.make CMakeFiles/cmTC_e8893.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_e8893.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_e8893.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_e8893.dir/build.make:66: CMakeFiles/cmTC_e8893.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_e8893/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_69474/fast && /usr/bin/make -f CMakeFiles/cmTC_69474.dir/build.make CMakeFiles/cmTC_69474.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_69474.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_69474.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_69474.dir/build.make:66: CMakeFiles/cmTC_69474.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_69474/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_bea7e/fast && /usr/bin/make -f CMakeFiles/cmTC_bea7e.dir/build.make CMakeFiles/cmTC_bea7e.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_bea7e.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_bea7e.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_bea7e.dir/build.make:66: CMakeFiles/cmTC_bea7e.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_bea7e/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_c3d6e/fast && /usr/bin/make -f CMakeFiles/cmTC_c3d6e.dir/build.make CMakeFiles/cmTC_c3d6e.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_c3d6e.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_c3d6e.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_c3d6e.dir/build.make:66: CMakeFiles/cmTC_c3d6e.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_c3d6e/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_09b88/fast && /usr/bin/make -f CMakeFiles/cmTC_09b88.dir/build.make CMakeFiles/cmTC_09b88.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_09b88.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_09b88.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_09b88.dir/build.make:66: CMakeFiles/cmTC_09b88.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_09b88/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_51000/fast && /usr/bin/make -f CMakeFiles/cmTC_51000.dir/build.make CMakeFiles/cmTC_51000.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_51000.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_51000.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_51000.dir/build.make:66: CMakeFiles/cmTC_51000.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_51000/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_7cf7d/fast && /usr/bin/make -f CMakeFiles/cmTC_7cf7d.dir/build.make CMakeFiles/cmTC_7cf7d.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_7cf7d.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_7cf7d.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_7cf7d.dir/build.make:66: CMakeFiles/cmTC_7cf7d.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_7cf7d/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_57eaa/fast && /usr/bin/make -f CMakeFiles/cmTC_57eaa.dir/build.make CMakeFiles/cmTC_57eaa.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_57eaa.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_57eaa.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_57eaa.dir/build.make:66: CMakeFiles/cmTC_57eaa.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_57eaa/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_4e5be/fast && /usr/bin/make -f CMakeFiles/cmTC_4e5be.dir/build.make CMakeFiles/cmTC_4e5be.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_4e5be.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_4e5be.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_4e5be.dir/build.make:66: CMakeFiles/cmTC_4e5be.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_4e5be/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_a6400/fast && /usr/bin/make -f CMakeFiles/cmTC_a6400.dir/build.make CMakeFiles/cmTC_a6400.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_a6400.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_a6400.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_a6400.dir/build.make:66: CMakeFiles/cmTC_a6400.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_a6400/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_92c0f/fast && /usr/bin/make -f CMakeFiles/cmTC_92c0f.dir/build.make CMakeFiles/cmTC_92c0f.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_92c0f.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_92c0f.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_92c0f.dir/build.make:66: CMakeFiles/cmTC_92c0f.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_92c0f/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_aaa72/fast && /usr/bin/make -f CMakeFiles/cmTC_aaa72.dir/build.make CMakeFiles/cmTC_aaa72.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_aaa72.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_aaa72.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_aaa72.dir/build.make:66: CMakeFiles/cmTC_aaa72.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_aaa72/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_b5db8/fast && /usr/bin/make -f CMakeFiles/cmTC_b5db8.dir/build.make CMakeFiles/cmTC_b5db8.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_b5db8.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_b5db8.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_b5db8.dir/build.make:66: CMakeFiles/cmTC_b5db8.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_b5db8/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f8511/fast && /usr/bin/make -f CMakeFiles/cmTC_f8511.dir/build.make CMakeFiles/cmTC_f8511.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f8511.dir/CMakeCCompilerABI.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_f8511.dir/CMakeCCompilerABI.c.o   -c /usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c
/usr/share/cmake-3.16/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
    2 | #  error "A C++ compiler has been selected for C."
      |    ^~~~~
make[1]: *** [CMakeFiles/cmTC_f8511.dir/build.make:66: CMakeFiles/cmTC_f8511.dir/CMakeCCompilerABI.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_f8511/fast] Error 2




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
    2 | # error "A C++ compiler has been selected for C."
      |   ^~~~~
CMakeCCompilerId.c:321:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  321 | char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:614:29: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  614 | char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
      |                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:615:25: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  615 | char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:635:3: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
  635 |   "INFO" ":" "dialect_default[" C_DIALECT "]";
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
CMakeCCompilerId.c:643:10: error: cannot declare ‘::main’ to be a global variable
  643 | int main(argc, argv) int argc; char *argv[];
      |          ^~~~
CMakeCCompilerId.c:643:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:643:16: error: ‘argv’ was not declared in this scope
  643 | int main(argc, argv) int argc; char *argv[];
      |                ^~~~
CMakeCCompilerId.c:643:20: error: expression list treated as compound expression in initializer [-fpermissive]
  643 | int main(argc, argv) int argc; char *argv[];
      |                    ^
CMakeCCompilerId.c:643:38: error: storage size of ‘argv’ isn’t known
  643 | int main(argc, argv) int argc; char *argv[];
      |                                      ^~~~
CMakeCCompilerId.c:647:1: error: expected unqualified-id before ‘{’ token
  647 | {
      | ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Determining if the C compiler works failed with the following output:
Change Dir: /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make cmTC_f9c3e/fast && /usr/bin/make -f CMakeFiles/cmTC_f9c3e.dir/build.make CMakeFiles/cmTC_f9c3e.dir/build
make[1]: Entering directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_f9c3e.dir/testCCompiler.c.o
/usr/bin/g++    -o CMakeFiles/cmTC_f9c3e.dir/testCCompiler.c.o   -c /home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp/testCCompiler.c
/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp/testCCompiler.c:2:3: error: #error "The CMAKE_C_COMPILER is set to a C++ compiler"
    2 | # error "The CMAKE_C_COMPILER is set to a C++ compiler"
      |   ^~~~~
make[1]: *** [CMakeFiles/cmTC_f9c3e.dir/build.make:66: CMakeFiles/cmTC_f9c3e.dir/testCCompiler.c.o] Error 1
make[1]: Leaving directory '/home/gerrit/Documents/Projects/Root-Recast-CMS-SUS-19-013/CMakeFiles/CMakeTmp'
make: *** [Makefile:121: cmTC_f9c3e/fast] Error 2



